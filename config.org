* Main
** Basic Config
#+begin_src emacs-lisp
  (setq doom-theme 'doom-palenight)
  (setq display-line-numbers-type t)
  (setq org-directory "~/org/")
  (setq
   left-fringe-width 0
   right-fringe-width 0)

  (delete-selection-mode t)


  (setq doom-font (font-spec :family "JetBrainsMonoNL NF " :size 15)
         doom-big-font (font-spec :family "JetBrainsMonoNL NF " :size 20)
         doom-variable-pitch-font (font-spec :family "Overpass" :size 24)
         doom-variable-pitch-font (font-spec :family "IBM Plex Mono" :weight 'light))

(global-subword-mode 1)                           ; Iterate through CamelCase words

#+end_src
*** Windows
#+begin_src emacs-lisp
(setq evil-vsplit-window-right t
      evil-split-window-below t)

(defadvice! prompt-for-buffer (&rest _)
  :after '(evil-window-split evil-window-vsplit)
  (consult-buffer))

#+end_src
** Solaire Mode and Golden Ratio
#+begin_src emacs-lisp
(solaire-global-mode +1)
(golden-ratio-mode +1)
(setq golden-ratio-auto-scale t)
#+end_src
** Info Colors
#+begin_src emacs-lisp
(use-package! info-colors
  :commands (info-colors-fontify-node))

(add-hook 'Info-selection-hook 'info-colors-fontify-node)

#+end_src

** My utils functions
#+begin_src emacs-lisp
 (defun nathan-date (arg)
   (interactive "P")
   (insert (if arg
               (format-time-string "%d.%m.%Y")
             (format-time-string "%Y-%m-%d"))))
#+end_src

** My keymaps
#+begin_src emacs-lisp
  (map! :leader :n "y k" 'consult-yank-from-kill-ring)
#+end_src
*** Java Mode
#+begin_src  emacs-lisp
  (map! :map  java-mode-map
      :n "e l" 'consult-lsp-diagnostics
      :n "e n" 'next-error); q in normal+visual states)
#+end_src

*** Gptel
#+begin_src emacs-lisp
        (map! :leader
           (:prefix ("o" . "gptel")
             :desc "Open GPTEL" "g p" #'gptel))

        (map! :leader
              (:prefix ("o" . "gptel")
              :desc "gptel menu" "g m" #'gptel-menu))


#+end_src
** Modeline
#+begin_src emacs-lisp
(display-time-mode +1)
(setq display-time-format "%a %d/%m %H:%M")
(setq mode-line-percent-position nil)
(setq mode-line-percent-position '(-3 ""))
(setq mode-line-position-column-line-format '("%l"))

#+end_src
* Lsp
**  Java
#+begin_src emacs-lisp
      (setq lsp-java-maven-download-sources t)
      (setq lsp-java-import-gradle-enabled t)
      (setq lsp-modeline-code-action-fallback-icon "ïƒ«" )

      (require 'lsp-java-boot)

      ;;   ;; to enable the lenses
      (add-hook 'lsp-mode-hook #'lsp-lens-mode)
      (add-hook 'java-mode-hook #'lsp-java-boot-lens-mode)
      (add-hook 'prog-mode-hook #'rainbow-delimiters-mode)
      (add-hook 'prog-mode-hook #'rainbow-identifiers-mode)
      (setq lsp-log-io t)
#+end_src
* DocSets
#+begin_src emacs-lisp
(set-docsets! 'java-mode "Java")
#+end_src
* ProjectTile
#+begin_src emacs-lisp
(setq projectile-sort-order 'recently-active)
#+end_src
* Jinx
#+begin_src emacs-lisp
;; Alternative 1: Enable Jinx globally
(add-hook 'emacs-startup-hook #'global-jinx-mode)
#+end_src
